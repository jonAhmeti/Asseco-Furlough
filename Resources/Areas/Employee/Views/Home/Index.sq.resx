<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Birth" xml:space="preserve">
    <value>Ditët e lindjes</value>
  </data>
  <data name="BirthMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;Push</value>
  </data>
  <data name="BloodDonation" xml:space="preserve">
    <value>Ditët për dhurim gjaku</value>
  </data>
  <data name="BloodDonationMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;Ct. Dracula</value>
  </data>
  <data name="Child" xml:space="preserve">
    <value>Ditët për fëmijë</value>
  </data>
  <data name="ChildMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;You're allowed to spend 3 days if you have a child younger than 3 years old.</value>
  </data>
  <data name="chooseType" xml:space="preserve">
    <value>Zgjedh llojin</value>
  </data>
  <data name="DeathOfRelative" xml:space="preserve">
    <value>Ditët për raste vdekjeje</value>
  </data>
  <data name="DeathOfRelativeMessage" xml:space="preserve">
    <value>Celebrate their life</value>
  </data>
  <data name="Marriage" xml:space="preserve">
    <value>Ditët e martesës</value>
  </data>
  <data name="MarriageMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;You can take marriage leave days for, well... marrying reasons</value>
  </data>
  <data name="Maternity" xml:space="preserve">
    <value>Ditët e lehonisë</value>
  </data>
  <data name="MaternityMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;Allows 6 months at 70% of your wage. Other 3 months are paid from the ministry and the last 3 are unpaid.</value>
  </data>
  <data name="Medical" xml:space="preserve">
    <value>Ditët mjekësore</value>
  </data>
  <data name="MedicalMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;You can take medical leave for health reasons. Requirements: Doctor's prescription.</value>
  </data>
  <data name="noDaysSelected" xml:space="preserve">
    <value>Numri total i ditëve</value>
  </data>
  <data name="Overtime" xml:space="preserve">
    <value>Ditët bonus</value>
  </data>
  <data name="OvertimeMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;Here are the days you've earned from working overtime so far.</value>
  </data>
  <data name="PrevYearly" xml:space="preserve">
    <value>Previous year days</value>
  </data>
  <data name="PrevYearlyMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;Days left from previous year. They're usually reset around 30st of June</value>
  </data>
  <data name="reason" xml:space="preserve">
    <value>Arsyeja</value>
  </data>
  <data name="reasonValidate" xml:space="preserve">
    <value>Ju lutem specifikoni arsyen e kërkesës. Duhet të jetë së paku 10 karaktere.</value>
  </data>
  <data name="requestType" xml:space="preserve">
    <value>Lloji i kërkesës</value>
  </data>
  <data name="requestTypeValidate" xml:space="preserve">
    <value>Ju lutem specifikoni llojin e kërkesës.</value>
  </data>
  <data name="selectedDaysHeader" xml:space="preserve">
    <value>Ditët e zgjedhura</value>
  </data>
  <data name="spentDays" xml:space="preserve">
    <value>Ditët e shpenzuara</value>
  </data>
  <data name="spentDaysMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;</value>
  </data>
  <data name="Unpaid" xml:space="preserve">
    <value>Ditët e shpenzuara</value>
  </data>
  <data name="UnpaidMessage" xml:space="preserve">
    <value>Spent days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;Displays how many unpaid days you have taken so far.</value>
  </data>
  <data name="Yearly" xml:space="preserve">
    <value>Ditët e pushimit vjetorë</value>
  </data>
  <data name="YearlyMessage" xml:space="preserve">
    <value>Available days: &lt;span class="fw-bold"&gt;{0}&lt;/span&gt;&lt;hr /&gt;&lt;br /&gt;This is your yearly leave days. You have 20 days after a year of working, which increases by 1 day for every 5 years.</value>
  </data>
</root>